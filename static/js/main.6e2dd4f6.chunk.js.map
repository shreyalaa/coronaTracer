{"version":3,"sources":["Components/Cards/Cards.js","Components/Header.js","api/index.js","Components/Charts/Charts.jsx","Components/CountryPicker/CountryPicker.jsx","App.js","reportWebVitals.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","className","style","marginLeft","fontFamily","start","end","value","duration","seprator","marginTop","Header","Button","backgroundColor","borderRadius","maxHeight","width","boxShadow","border","borderBottom","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountry","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","CountryPicker","handleCountryChange","selectNative","setSelectNative","FormControl","NativeSelect","defaultValue","onChange","e","target","i","id","App","state","fetchedData","setState","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e2dd4f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./cards.css\";\r\nimport CountUp from \"react-countup\";\r\nconst Cards = ({data:{confirmed , recovered , deaths , lastUpdate}}) =>\r\n{   \r\n    if(!confirmed)\r\n    {\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        \r\n        <div className = \"card\">\r\n        <div className = \"cardA\">\r\n        <h2 style = {{ marginLeft: \"1cm\" , fontFamily: \"cursive\"}}>  Active cases <CountUp start = {0} end = {confirmed.value} duration = {2.5} seprator = \",\"/></h2>\r\n        </div> \r\n        <h2 style = {{marginTop: \"1cm\" , marginLeft: \"1cm\"  , fontFamily: \"cursive\"}}> Total recovered <CountUp start = {0} end = {recovered.value} duration = {2.5} seprator = \",\"/></h2>\r\n        <h2  style = {{marginTop: \"1cm\" , marginLeft: \"1cm\" , fontFamily: \"cursive\"}}> Total deaths <CountUp start = {0} end = {deaths.value} duration = {2.5} seprator = \",\"/></h2>\r\n        </div>\r\n        )\r\n}\r\nexport default Cards;","import React from \"react\"\r\nimport \"./Header.css\"\r\n\r\nimport Button from '@material-ui/core/Button'\r\nconst Header = () =>\r\n{\r\n    return(\r\n        <div className = \"header\">\r\n        <h1> <Button style = {{ backgroundColor: \"rgb(167, 179, 12)\" , borderRadius:\"60px\" , maxHeight: \"3cm\" , width: \"9cm\" , boxShadow: \"10p  10px  15px\" ,border: \"none\" , borderBottom: \"6px solid black\"}}> <h1> ðŸ˜· </h1></Button> Corona Tracker</h1>\r\n        \r\n        </div>\r\n    )\r\n}\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) =>\r\n{   \r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n\r\n    try{\r\n        const {data: { confirmed , recovered , deaths , lastUpdate}} = await axios.get(changeableUrl);\r\n        \r\n        return {confirmed , recovered , deaths , lastUpdate};\r\n       \r\n    }\r\n    catch (error){\r\n      console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() =>\r\n{\r\n    try{\r\n        const {data} = await axios.get(\"https://covid19.mathdro.id/api/daily\")\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate\r\n        }))\r\n        return(modifiedData)\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const fetchCountry = async () =>\r\n{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return(countries.map((country)=>{return country.name\r\n\r\n        }))\r\n    }\r\n    catch(error){\r\n\r\n    }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport {Line  , Bar } from \"react-chartjs-2\";\r\nimport \"./Charts.css\";\r\nconst Charts = () =>\r\n{   \r\n    const [dailyData , setDailyData] = useState([]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        const fetchAPI = async () =>\r\n        {\r\n            setDailyData( await fetchDailyData())\r\n        }\r\n        \r\n        fetchAPI();\r\n    } )\r\n\r\n    const lineChart = (\r\n    \r\n    dailyData.length ? (\r\n       <Line \r\n       data = {{\r\n           labels: dailyData.map(({date}) =>date),\r\n           datasets: [{\r\n                  data: dailyData.map(({confirmed}) =>confirmed),\r\n                  label: \"Infected\",\r\n                  borderColor: \"#3333ff\",\r\n                  fill: true\r\n                     },\r\n                     {\r\n                  data: dailyData.map(({deaths}) =>deaths),\r\n                  label: \"Deaths\",\r\n                  borderColor: \"rgba(255 , 0, 0 , 0.5)\",\r\n                  fill: true\r\n                     }]\r\n       }}\r\n       />): null\r\n    )\r\n\r\n    return(\r\n       <div className  = \"chart\">\r\n\r\n       {lineChart}\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, { useEffect, useState } from \"react\";\r\nimport { fetchCountry } from \"../../api\";\r\nimport { NativeSelect } from '@material-ui/core';\r\nimport { FormControl } from '@material-ui/core';\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>\r\n{   \r\n    const [selectNative , setSelectNative] = useState([]);\r\n\r\n    useEffect(()=>\r\n    {\r\n        const fetchData = async () =>\r\n        {\r\n            setSelectNative(await fetchCountry())\r\n        }\r\n        fetchData()\r\n    },[setSelectNative])\r\n    \r\n    return(\r\n        <div>\r\n        <FormControl style = {{marginLeft:\"14cm\"}}>\r\n        <NativeSelect defaultValue =\"\" onChange = {(e) =>(handleCountryChange(e.target.value))} >\r\n        <option value = \"global\">global</option>\r\n        {selectNative.map((country , i)=><option value= {country} id = {i}>{country}</option>)}\r\n        </NativeSelect>\r\n        </FormControl>\r\n        </div>\r\n    )\r\n}\r\nexport default CountryPicker;","import React from \"react\";\r\nimport Cards from \"./Components/Cards/Cards\";\r\nimport Header from \"./Components/Header\";\r\nimport {fetchData} from \"./api\";\r\nimport \"./Components/Cards/cards.css\"\r\nimport Charts from \"./Components/Charts/Charts.jsx\"\r\nimport CountryPicker from \"./Components/CountryPicker/CountryPicker\";\r\nclass App extends React.Component\r\n{   \r\n    state= {\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData()\r\n       \r\n        this.setState({data: fetchedData})\r\n        \r\n        \r\n    }\r\n\r\n    handleCountryChange = async (country) =>\r\n    {  console.log(country)\r\n       const fetchedData = await fetchData(country);  \r\n       \r\n       this.setState({data: fetchedData , country: country})\r\n    }\r\n   \r\n    render(){\r\n        const {data} = this.state\r\n        return(\r\n        <div>\r\n         <Header/>\r\n         \r\n         <Cards data = {data}  />\r\n       \r\n         <br/>\r\n         <br/>\r\n         <br/>\r\n         <CountryPicker handleCountryChange = {this.handleCountryChange}/>\r\n         <br/>\r\n         <Charts/>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}